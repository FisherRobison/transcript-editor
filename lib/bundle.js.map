{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///bundle.js","webpack:///webpack/bootstrap ec948f4de5f0f23026bf","webpack:///./src/index.js","webpack:///external \"draft-js\"","webpack:///external \"immutable\"","webpack:///external \"react\"","webpack:///./src/helpers/TranscriptEntities.js","webpack:///./src/components/TranscriptEditorBlock.js","webpack:///./src/components/TranscriptEditorSpace.js","webpack:///./src/components/TranscriptEditorWord.js","webpack:///./src/helpers/convertFromTranscript.js","webpack:///./src/helpers/convertToTranscript.js","webpack:///external \"transcript-model\"","webpack:///./src/components/TranscriptEditor.js","webpack:///./src/helpers/updateBlock.js","webpack:///external \"lodash.debounce\"","webpack:///external \"uuid/v4\""],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_1__","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_10__","__WEBPACK_EXTERNAL_MODULE_14__","__WEBPACK_EXTERNAL_MODULE_15__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","convertToTranscript","convertFromTranscript","TranscriptEntities","TranscriptEditorSpace","TranscriptEditorWord","TranscriptEditorBlock","undefined","_TranscriptEditor","_TranscriptEditor2","_TranscriptEditorBlock","_TranscriptEditorBlock2","_TranscriptEditorWord","_TranscriptEditorWord2","_TranscriptEditorSpace","_TranscriptEditorSpace2","_TranscriptEntities","_TranscriptEntities2","_convertFromTranscript","_convertFromTranscript2","_convertToTranscript","_convertToTranscript2","TRANSCRIPT_SPACE","TRANSCRIPT_WORD","TRANSCRIPT_PLACEHOLDER","_react","_react2","_draftJs","props","createElement","className","contentEditable","style","MozUserSelect","WebkitUserSelect","msUserSelect","block","data","get","EditorBlock","propTypes","PropTypes","object","_ref","offsetKey","children","string","array","entityKey","entity","Entity","titleString","start","toFixed","end","title","data-start","data-end","_immutable","_immutable2","_v","_v2","transcript","contentBlocks","map","segment","segmentIndex","ContentBlock","key","toString","characterList","word","create","List","split","CharacterMetadata","applyEntity","interpose","flatten","text","w","join","Map","speaker","contentState","ContentState","createFromBlockArray","speakers","_transcriptModel","segments","getBlockMap","toArray","words","findEntityRanges","character","getEntity","getType","getEntityAt","getText","substring","push","TranscriptWord","TranscriptSegment","Transcript","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","_typeof","Symbol","iterator","_createClass","defineProperties","target","i","length","descriptor","protoProps","staticProps","_lodash","_lodash2","_updateBlock","_updateBlock2","TranscriptEditor","_Component","_this","getPrototypeOf","state","editorState","EditorState","createEmpty","disabled","onChange","bind","handleBeforeInput","handleReturn","blockRenderer","handleKeyboardEvent","debouncedSendTranscriptUpdate","sendTranscriptUpdate","decorator","CompositeDecorator","strategy","contentBlock","callback","entityType","component","instantiateEditor","nextProps","setState","_this2","getCurrentContent","previousEditorState","lastChangeType","getLastChangeType","selectionState","getSelection","previousSelectionState","onSelectionChange","sendSelectionChange","_ret","startKey","getStartKey","previousStartKey","blockMap","newBlockMap","reduce","_newBlockMap","blockKey","newContentBlock","isEmpty","startOffset","getStartOffset","size","type","set","insert","slice","merge","getBlockForKey","first","shift","last","pop","OrderedMap","newContentState","v","_convertFromTranscrip","createWithContent","chars","selectedBlock","entityKeyBefore","e","getDefaultKeyBinding","onKeyboardEvent","editor","focus","onTranscriptUpdate","isBackward","focusKey","anchorKey","focusOffset","anchorOffset","endKey","endOffset","startEntityKey","endEntityKey","startEntity","endEntity","startTime","startWordID","startBlockKey","startCharacterOffset","endTime","endID","endBlockKey","endCharacterOffset","entityKeyAfter","_this3","Editor","ref","keyBindingFn","handlePastedText","blockRendererFn","Component","instanceOf","func","bool","updateBlock","index","previousCharacter","previousEntity","mergeData"],"mappings":"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","file":"bundle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"draft-js\"), require(\"immutable\"), require(\"react\"), require(\"transcript-model\"), require(\"lodash.debounce\"), require(\"uuid/v4\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"draft-js\", \"immutable\", \"react\", \"transcript-model\", \"lodash.debounce\", \"uuid/v4\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"transcript-editor\"] = factory(require(\"draft-js\"), require(\"immutable\"), require(\"react\"), require(\"transcript-model\"), require(\"lodash.debounce\"), require(\"uuid/v4\"));\n\telse\n\t\troot[\"transcript-editor\"] = factory(root[\"draft-js\"], root[\"immutable\"], root[\"react\"], root[\"transcript-model\"], root[\"lodash.debounce\"], root[\"uuid/v4\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_10__, __WEBPACK_EXTERNAL_MODULE_14__, __WEBPACK_EXTERNAL_MODULE_15__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"draft-js\"), require(\"immutable\"), require(\"react\"), require(\"transcript-model\"), require(\"lodash.debounce\"), require(\"uuid/v4\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"draft-js\", \"immutable\", \"react\", \"transcript-model\", \"lodash.debounce\", \"uuid/v4\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"transcript-editor\"] = factory(require(\"draft-js\"), require(\"immutable\"), require(\"react\"), require(\"transcript-model\"), require(\"lodash.debounce\"), require(\"uuid/v4\"));\n\telse\n\t\troot[\"transcript-editor\"] = factory(root[\"draft-js\"], root[\"immutable\"], root[\"react\"], root[\"transcript-model\"], root[\"lodash.debounce\"], root[\"uuid/v4\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_10__, __WEBPACK_EXTERNAL_MODULE_14__, __WEBPACK_EXTERNAL_MODULE_15__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.convertToTranscript = exports.convertFromTranscript = exports.TranscriptEntities = exports.TranscriptEditorSpace = exports.TranscriptEditorWord = exports.TranscriptEditorBlock = undefined;\n\t\n\tvar _TranscriptEditor = __webpack_require__(11);\n\t\n\tvar _TranscriptEditor2 = _interopRequireDefault(_TranscriptEditor);\n\t\n\tvar _TranscriptEditorBlock = __webpack_require__(5);\n\t\n\tvar _TranscriptEditorBlock2 = _interopRequireDefault(_TranscriptEditorBlock);\n\t\n\tvar _TranscriptEditorWord = __webpack_require__(7);\n\t\n\tvar _TranscriptEditorWord2 = _interopRequireDefault(_TranscriptEditorWord);\n\t\n\tvar _TranscriptEditorSpace = __webpack_require__(6);\n\t\n\tvar _TranscriptEditorSpace2 = _interopRequireDefault(_TranscriptEditorSpace);\n\t\n\tvar _TranscriptEntities = __webpack_require__(4);\n\t\n\tvar _TranscriptEntities2 = _interopRequireDefault(_TranscriptEntities);\n\t\n\tvar _convertFromTranscript = __webpack_require__(8);\n\t\n\tvar _convertFromTranscript2 = _interopRequireDefault(_convertFromTranscript);\n\t\n\tvar _convertToTranscript = __webpack_require__(9);\n\t\n\tvar _convertToTranscript2 = _interopRequireDefault(_convertToTranscript);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = _TranscriptEditor2.default;\n\texports.TranscriptEditorBlock = _TranscriptEditorBlock2.default;\n\texports.TranscriptEditorWord = _TranscriptEditorWord2.default;\n\texports.TranscriptEditorSpace = _TranscriptEditorSpace2.default;\n\texports.TranscriptEntities = _TranscriptEntities2.default;\n\texports.convertFromTranscript = _convertFromTranscript2.default;\n\texports.convertToTranscript = _convertToTranscript2.default;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar TRANSCRIPT_SPACE = exports.TRANSCRIPT_SPACE = 'TRANSCRIPT_SPACE';\n\tvar TRANSCRIPT_WORD = exports.TRANSCRIPT_WORD = 'TRANSCRIPT_WORD';\n\tvar TRANSCRIPT_PLACEHOLDER = exports.TRANSCRIPT_PLACEHOLDER = 'TRANSCRIPT_PLACEHOLDER';\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _react = __webpack_require__(3);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _draftJs = __webpack_require__(1);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar TranscriptEditorBlock = function TranscriptEditorBlock(props) {\n\t  return _react2.default.createElement(\n\t    'div',\n\t    { className: 'transcript-editor-block' },\n\t    _react2.default.createElement(\n\t      'div',\n\t      {\n\t        className: 'transcript-editor-block__speaker',\n\t        contentEditable: false,\n\t        style: {\n\t          MozUserSelect: 'none',\n\t          WebkitUserSelect: 'none',\n\t          msUserSelect: 'none'\n\t        }\n\t      },\n\t      'Speaker ',\n\t      props.block.data.get('speaker')\n\t    ),\n\t    _react2.default.createElement(\n\t      'div',\n\t      { className: 'transcript-editor-block__text' },\n\t      _react2.default.createElement(_draftJs.EditorBlock, props)\n\t    )\n\t  );\n\t};\n\t\n\tTranscriptEditorBlock.propTypes = {\n\t  block: _react2.default.PropTypes.object\n\t};\n\t\n\texports.default = TranscriptEditorBlock;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _react = __webpack_require__(3);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar TranscriptEditorSpace = function TranscriptEditorSpace(_ref) {\n\t  var offsetKey = _ref.offsetKey,\n\t      children = _ref.children;\n\t  return _react2.default.createElement(\n\t    \"span\",\n\t    {\n\t      id: \"space-\" + offsetKey,\n\t      className: \"transcript-editor-block__space\"\n\t    },\n\t    children\n\t  );\n\t};\n\t\n\tTranscriptEditorSpace.propTypes = {\n\t  offsetKey: _react2.default.PropTypes.string,\n\t  children: _react2.default.PropTypes.array\n\t};\n\t\n\texports.default = TranscriptEditorSpace;\n\tmodule.exports = exports[\"default\"];\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _react = __webpack_require__(3);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _draftJs = __webpack_require__(1);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar TranscriptEditorWord = function TranscriptEditorWord(_ref) {\n\t  var entityKey = _ref.entityKey,\n\t      children = _ref.children;\n\t\n\t  var entity = _draftJs.Entity.get(entityKey);\n\t  var titleString = '' + entity.data.start.toFixed(2) + (' - ' + entity.data.end.toFixed(2));\n\t  return _react2.default.createElement(\n\t    'span',\n\t    {\n\t      title: titleString,\n\t      id: 'word-' + entity.data.id,\n\t      'data-start': entity.data.start,\n\t      'data-end': entity.data.end,\n\t      className: 'transcript-editor-block__word'\n\t    },\n\t    children\n\t  );\n\t};\n\t\n\tTranscriptEditorWord.propTypes = {\n\t  entityKey: _react2.default.PropTypes.string,\n\t  children: _react2.default.PropTypes.array\n\t};\n\t\n\texports.default = TranscriptEditorWord;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _draftJs = __webpack_require__(1);\n\t\n\tvar _immutable = __webpack_require__(2);\n\t\n\tvar _immutable2 = _interopRequireDefault(_immutable);\n\t\n\tvar _v = __webpack_require__(15);\n\t\n\tvar _v2 = _interopRequireDefault(_v);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar convertFromTranscript = function convertFromTranscript(transcript) {\n\t  var contentBlocks = transcript.get('segments').map(function (segment, segmentIndex) {\n\t    return new _draftJs.ContentBlock({\n\t      key: segmentIndex.toString(),\n\t      characterList: segment.get('words').map(function (word) {\n\t        var entity = _draftJs.Entity.create('TRANSCRIPT_WORD', 'MUTABLE', {\n\t          start: word.get('start'),\n\t          end: word.get('end'),\n\t          id: word.get('id') || (0, _v2.default)()\n\t        });\n\t        return new _immutable2.default.List(word.get('text').split('').map(function () {\n\t          return _draftJs.CharacterMetadata.applyEntity(_draftJs.CharacterMetadata.create(), entity);\n\t        }));\n\t      }).interpose(new _immutable2.default.List([_draftJs.CharacterMetadata.applyEntity(_draftJs.CharacterMetadata.create(), _draftJs.Entity.create('TRANSCRIPT_SPACE', 'IMMUTABLE', null))])).flatten(1),\n\t      text: segment.get('words').map(function (w) {\n\t        return w.get('text');\n\t      }).join(' '),\n\t      data: new _immutable2.default.Map({ speaker: segment.get('speaker') })\n\t    });\n\t  });\n\t\n\t  var contentState = _draftJs.ContentState.createFromBlockArray(contentBlocks);\n\t\n\t  var speakers = transcript.get('speakers');\n\t\n\t  return { contentState: contentState, speakers: speakers };\n\t};\n\t\n\texports.default = convertFromTranscript;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _draftJs = __webpack_require__(1);\n\t\n\tvar _immutable = __webpack_require__(2);\n\t\n\tvar _immutable2 = _interopRequireDefault(_immutable);\n\t\n\tvar _transcriptModel = __webpack_require__(10);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar convertToTranscript = function convertToTranscript(contentState, speakers) {\n\t  var segments = contentState.getBlockMap().toArray().map(function (block) {\n\t    var words = [];\n\t\n\t    block.findEntityRanges(function (character) {\n\t      var entityKey = character.getEntity();\n\t      if (entityKey === null) {\n\t        return false;\n\t      }\n\t      return _draftJs.Entity.get(entityKey).getType() === 'TRANSCRIPT_WORD';\n\t    }, function (start, end) {\n\t      var entity = _draftJs.Entity.get(block.getEntityAt(start));\n\t      var text = block.getText().substring(start, end);\n\t      words.push(new _transcriptModel.TranscriptWord({\n\t        start: entity.data.start,\n\t        end: entity.data.end,\n\t        id: entity.data.id,\n\t        text: text\n\t      }));\n\t    });\n\t\n\t    return new _transcriptModel.TranscriptSegment({\n\t      words: new _immutable2.default.List(words),\n\t      speaker: block.data.get('speaker')\n\t    });\n\t  });\n\t\n\t  return new _transcriptModel.Transcript({\n\t    segments: new _immutable2.default.List(segments),\n\t    speakers: speakers\n\t  });\n\t};\n\t\n\texports.default = convertToTranscript;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_10__;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(3);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _draftJs = __webpack_require__(1);\n\t\n\tvar _immutable = __webpack_require__(2);\n\t\n\tvar _immutable2 = _interopRequireDefault(_immutable);\n\t\n\tvar _lodash = __webpack_require__(14);\n\t\n\tvar _lodash2 = _interopRequireDefault(_lodash);\n\t\n\tvar _transcriptModel = __webpack_require__(10);\n\t\n\tvar _convertFromTranscript = __webpack_require__(8);\n\t\n\tvar _convertFromTranscript2 = _interopRequireDefault(_convertFromTranscript);\n\t\n\tvar _convertToTranscript = __webpack_require__(9);\n\t\n\tvar _convertToTranscript2 = _interopRequireDefault(_convertToTranscript);\n\t\n\tvar _updateBlock = __webpack_require__(12);\n\t\n\tvar _updateBlock2 = _interopRequireDefault(_updateBlock);\n\t\n\tvar _TranscriptEditorBlock = __webpack_require__(5);\n\t\n\tvar _TranscriptEditorBlock2 = _interopRequireDefault(_TranscriptEditorBlock);\n\t\n\tvar _TranscriptEditorWord = __webpack_require__(7);\n\t\n\tvar _TranscriptEditorWord2 = _interopRequireDefault(_TranscriptEditorWord);\n\t\n\tvar _TranscriptEditorSpace = __webpack_require__(6);\n\t\n\tvar _TranscriptEditorSpace2 = _interopRequireDefault(_TranscriptEditorSpace);\n\t\n\tvar _TranscriptEntities = __webpack_require__(4);\n\t\n\t__webpack_require__(13);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar TranscriptEditor = function (_Component) {\n\t  _inherits(TranscriptEditor, _Component);\n\t\n\t  function TranscriptEditor(props) {\n\t    _classCallCheck(this, TranscriptEditor);\n\t\n\t    var _this = _possibleConstructorReturn(this, (TranscriptEditor.__proto__ || Object.getPrototypeOf(TranscriptEditor)).call(this, props));\n\t\n\t    _this.state = {\n\t      editorState: _draftJs.EditorState.createEmpty(),\n\t      speakers: [],\n\t      disabled: props.disabled || false\n\t    };\n\t\n\t    _this.onChange = _this.onChange.bind(_this);\n\t    _this.handleBeforeInput = _this.handleBeforeInput.bind(_this);\n\t    _this.handleReturn = _this.handleReturn.bind(_this);\n\t    _this.blockRenderer = _this.blockRenderer.bind(_this);\n\t    _this.handleKeyboardEvent = _this.handleKeyboardEvent.bind(_this);\n\t\n\t    _this.debouncedSendTranscriptUpdate = (0, _lodash2.default)(_this.sendTranscriptUpdate, 500);\n\t\n\t    _this.decorator = new _draftJs.CompositeDecorator([{\n\t      strategy: function strategy(contentBlock, callback) {\n\t        contentBlock.findEntityRanges(function (character) {\n\t          var entityKey = character.getEntity();\n\t          if (entityKey === null) {\n\t            return false;\n\t          }\n\t          var entityType = _draftJs.Entity.get(entityKey).getType();\n\t          return entityType === _TranscriptEntities.TRANSCRIPT_WORD;\n\t        }, callback);\n\t      },\n\t      component: _TranscriptEditorWord2.default\n\t    }, {\n\t      strategy: function strategy(contentBlock, callback) {\n\t        contentBlock.findEntityRanges(function (character) {\n\t          var entityKey = character.getEntity();\n\t          if (entityKey === null) {\n\t            return false;\n\t          }\n\t          var entityType = _draftJs.Entity.get(entityKey).getType();\n\t          return entityType === _TranscriptEntities.TRANSCRIPT_SPACE;\n\t        }, callback);\n\t      },\n\t      component: _TranscriptEditorSpace2.default\n\t    }]);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(TranscriptEditor, [{\n\t    key: 'componentWillMount',\n\t    value: function componentWillMount() {\n\t      if (this.props.transcript) {\n\t        this.instantiateEditor(this.props.transcript);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'componentWillReceiveProps',\n\t    value: function componentWillReceiveProps(nextProps) {\n\t      this.setState({\n\t        disabled: nextProps.disabled || false\n\t      });\n\t\n\t      var transcript = nextProps.transcript;\n\t      if (transcript && this.state.transcript !== transcript) {\n\t        this.instantiateEditor(transcript);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'onChange',\n\t    value: function onChange(editorState) {\n\t      var _this2 = this;\n\t\n\t      if (this.state.disabled) {\n\t        return;\n\t      }\n\t\n\t      var contentState = editorState.getCurrentContent();\n\t      var previousEditorState = this.state.editorState;\n\t      var lastChangeType = editorState.getLastChangeType();\n\t\n\t      var selectionState = editorState.getSelection();\n\t      var previousSelectionState = previousEditorState.getSelection();\n\t\n\t      if (this.props.onSelectionChange && selectionState !== previousSelectionState) {\n\t        this.sendSelectionChange(contentState, selectionState);\n\t      }\n\t\n\t      if (lastChangeType !== 'undo' && contentState !== previousEditorState.getCurrentContent()) {\n\t        var _ret = function () {\n\t          _this2.debouncedSendTranscriptUpdate(contentState, _this2.state.speakers);\n\t\n\t          var startKey = selectionState.getStartKey();\n\t          var previousStartKey = previousSelectionState.getStartKey();\n\t\n\t          var blockMap = contentState.getBlockMap();\n\t\n\t          var newBlockMap = blockMap.reduce(function (_newBlockMap, contentBlock, blockKey) {\n\t            var newContentBlock = contentBlock;\n\t\n\t            // Is this the block currently being edited?\n\t            if (blockKey === startKey) {\n\t              // Has everything been deleted from the block?\n\t              if (newContentBlock.characterList.isEmpty()) {\n\t                // Remove it\n\t                return _newBlockMap;\n\t              }\n\t\n\t              var startOffset = selectionState.getStartOffset();\n\t              // Have we merged blocks?\n\t              if (blockMap.size < previousEditorState.getCurrentContent().getBlockMap().size) {\n\t                // Do we have two adjacent words?\n\t                if (_draftJs.Entity.get(newContentBlock.characterList.get(startOffset).entity).type === _TranscriptEntities.TRANSCRIPT_WORD && _draftJs.Entity.get(newContentBlock.characterList.get(startOffset - 1).entity).type === _TranscriptEntities.TRANSCRIPT_WORD) {\n\t                  // Add a space\n\t                  newContentBlock = newContentBlock.set('characterList', newContentBlock.characterList.insert(startOffset, _draftJs.CharacterMetadata.applyEntity(_draftJs.CharacterMetadata.create(), _draftJs.Entity.create(_TranscriptEntities.TRANSCRIPT_SPACE, 'IMMUTABLE', null)))).set('text', '' + newContentBlock.text.slice(0, startOffset) + (' ' + newContentBlock.text.slice(startOffset)));\n\t                }\n\t              }\n\t\n\t              // Update the entities\n\t              newContentBlock = newContentBlock.merge((0, _updateBlock2.default)(newContentBlock, previousEditorState.getCurrentContent().getBlockForKey(blockKey)));\n\t\n\t              // Have we created a leading space? (e.g. when splitting a block)\n\t              if (_draftJs.Entity.get(newContentBlock.characterList.first().entity).type === _TranscriptEntities.TRANSCRIPT_SPACE) {\n\t                // Remove the leading space\n\t                newContentBlock = newContentBlock.set('characterList', newContentBlock.characterList.shift()).set('text', newContentBlock.text.substring(1));\n\t              }\n\t\n\t              // Is this block missing data? (e.g. it's been split)\n\t              if (newContentBlock.data.isEmpty()) {\n\t                // Copy the previous block's data\n\t                newContentBlock = newContentBlock.set('data', _newBlockMap.last().data);\n\t              }\n\t              // Otherwise is this the block previously being edited? (e.g. that was split)\n\t            } else if (blockKey === previousStartKey) {\n\t              // Have we created a trailing space?\n\t              if (_draftJs.Entity.get(newContentBlock.characterList.last().entity).type === _TranscriptEntities.TRANSCRIPT_SPACE) {\n\t                // Remove the trailing space\n\t                newContentBlock = newContentBlock.set('characterList', newContentBlock.characterList.pop()).set('text', newContentBlock.text.substring(0, newContentBlock.text.length - 1));\n\t              }\n\t            }\n\t\n\t            return _newBlockMap.set(blockKey, newContentBlock);\n\t          }, new _immutable2.default.OrderedMap());\n\t\n\t          var newContentState = contentState.set('blockMap', newBlockMap);\n\t          _this2.setState({\n\t            editorState: _draftJs.EditorState.push(previousEditorState, newContentState, lastChangeType)\n\t          });\n\t          return {\n\t            v: void 0\n\t          };\n\t        }();\n\t\n\t        if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n\t      }\n\t      this.setState({\n\t        editorState: editorState\n\t      });\n\t    }\n\t  }, {\n\t    key: 'instantiateEditor',\n\t    value: function instantiateEditor(transcript) {\n\t      var _convertFromTranscrip = (0, _convertFromTranscript2.default)(transcript),\n\t          contentState = _convertFromTranscrip.contentState,\n\t          speakers = _convertFromTranscrip.speakers;\n\t\n\t      this.setState({\n\t        editorState: _draftJs.EditorState.createWithContent(contentState, this.decorator),\n\t        speakers: speakers,\n\t        transcript: transcript\n\t      });\n\t\n\t      this.sendTranscriptUpdate(contentState, speakers);\n\t    }\n\t  }, {\n\t    key: 'handleBeforeInput',\n\t    value: function handleBeforeInput(chars) {\n\t      // Don't allow inserting additional spaces between words\n\t      if (chars === ' ') {\n\t        var editorState = this.state.editorState;\n\t        var selectionState = editorState.getSelection();\n\t        var startKey = selectionState.getStartKey();\n\t        var startOffset = selectionState.getStartOffset();\n\t        var selectedBlock = editorState.getCurrentContent().getBlockForKey(startKey);\n\t        var entityKeyBefore = selectedBlock.getEntityAt(startOffset - 1);\n\t        if (entityKeyBefore && _draftJs.Entity.get(entityKeyBefore).type === _TranscriptEntities.TRANSCRIPT_SPACE) {\n\t          return true;\n\t        }\n\t      }\n\t      return false;\n\t    }\n\t  }, {\n\t    key: 'handleKeyboardEvent',\n\t    value: function handleKeyboardEvent(e) {\n\t      if ((0, _draftJs.getDefaultKeyBinding)(e)) {\n\t        return (0, _draftJs.getDefaultKeyBinding)(e);\n\t      }\n\t      if (this.props.onKeyboardEvent) {\n\t        this.props.onKeyboardEvent(e);\n\t      }\n\t      return null;\n\t    }\n\t  }, {\n\t    key: 'blockRenderer',\n\t    value: function blockRenderer() {\n\t      return {\n\t        component: _TranscriptEditorBlock2.default,\n\t        props: {\n\t          speakers: this.state.speakers\n\t        }\n\t      };\n\t    }\n\t  }, {\n\t    key: 'focus',\n\t    value: function focus() {\n\t      this.editor.focus();\n\t    }\n\t  }, {\n\t    key: 'sendTranscriptUpdate',\n\t    value: function sendTranscriptUpdate(contentState, speakers) {\n\t      this.props.onTranscriptUpdate((0, _convertToTranscript2.default)(contentState, speakers));\n\t    }\n\t  }, {\n\t    key: 'sendSelectionChange',\n\t    value: function sendSelectionChange(contentState, selectionState) {\n\t      var startKey = selectionState.isBackward ? selectionState.focusKey : selectionState.anchorKey;\n\t      var startOffset = selectionState.isBackward ? selectionState.focusOffset : selectionState.anchorOffset;\n\t      var endKey = selectionState.isBackward ? selectionState.anchorKey : selectionState.focusKey;\n\t      var endOffset = selectionState.isBackward ? selectionState.anchorOffset : selectionState.focusOffset;\n\t\n\t      var startEntityKey = contentState.getBlockForKey(startKey).getEntityAt(startOffset);\n\t      var endEntityKey = contentState.getBlockForKey(endKey).getEntityAt(endOffset);\n\t\n\t      var startEntity = startEntityKey && _draftJs.Entity.get(startEntityKey);\n\t      var endEntity = endEntityKey && _draftJs.Entity.get(endEntityKey);\n\t\n\t      this.props.onSelectionChange({\n\t        startTime: startEntity && startEntity.data.start,\n\t        startWordID: startEntity && startEntity.data.id,\n\t        startBlockKey: startKey,\n\t        startCharacterOffset: startOffset,\n\t        endTime: endEntity && endEntity.data.end,\n\t        endID: endEntity && endEntity.data.id,\n\t        endBlockKey: endKey,\n\t        endCharacterOffset: endOffset\n\t      });\n\t    }\n\t  }, {\n\t    key: 'handleReturn',\n\t    value: function handleReturn() {\n\t      var editorState = this.state.editorState;\n\t      var selectionState = editorState.getSelection();\n\t      var startKey = selectionState.getStartKey();\n\t      var startOffset = selectionState.getStartOffset();\n\t      var selectedBlock = editorState.getCurrentContent().getBlockForKey(startKey);\n\t      var entityKeyBefore = selectedBlock.getEntityAt(startOffset - 1);\n\t      var entityKeyAfter = selectedBlock.getEntityAt(startOffset);\n\t      if (entityKeyBefore && _draftJs.Entity.get(entityKeyBefore).type === _TranscriptEntities.TRANSCRIPT_SPACE || entityKeyAfter && _draftJs.Entity.get(entityKeyAfter).type === _TranscriptEntities.TRANSCRIPT_SPACE) {\n\t        return false;\n\t      }\n\t      return true;\n\t    }\n\t\n\t    // eslint-disable-next-line\n\t\n\t  }, {\n\t    key: 'handlePastedText',\n\t    value: function handlePastedText() {\n\t      return true;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _this3 = this;\n\t\n\t      var editorState = this.state.editorState;\n\t\n\t      return _react2.default.createElement(\n\t        'div',\n\t        { className: 'transcript-editor' },\n\t        _react2.default.createElement(_draftJs.Editor, {\n\t          ref: function ref(editor) {\n\t            _this3.editor = editor;\n\t          },\n\t          editorState: editorState,\n\t          onChange: this.onChange,\n\t          handleReturn: this.handleReturn,\n\t          handleBeforeInput: this.handleBeforeInput,\n\t          keyBindingFn: this.handleKeyboardEvent,\n\t          handlePastedText: this.handlePastedText,\n\t          blockRendererFn: this.blockRenderer\n\t        })\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return TranscriptEditor;\n\t}(_react.Component);\n\t\n\tTranscriptEditor.propTypes = {\n\t  transcript: _react2.default.PropTypes.instanceOf(_transcriptModel.Transcript),\n\t  onTranscriptUpdate: _react2.default.PropTypes.func,\n\t  onSelectionChange: _react2.default.PropTypes.func,\n\t  disabled: _react2.default.PropTypes.bool,\n\t  onKeyboardEvent: _react2.default.PropTypes.func\n\t};\n\t\n\texports.default = TranscriptEditor;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _immutable = __webpack_require__(2);\n\t\n\tvar _immutable2 = _interopRequireDefault(_immutable);\n\t\n\tvar _draftJs = __webpack_require__(1);\n\t\n\tvar _TranscriptEntities = __webpack_require__(4);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar updateBlock = function updateBlock(contentBlock) {\n\t  return contentBlock.characterList.reduce(function (_ref, character, index) {\n\t    var characterList = _ref.characterList,\n\t        text = _ref.text;\n\t\n\t    // Is this the first character?\n\t    if (!characterList.isEmpty()) {\n\t      var previousCharacter = characterList.last();\n\t      // Does the previous character have an entity?\n\t      if (previousCharacter.entity) {\n\t        // Does the previous character have a different entity?\n\t        if (character.entity) {\n\t          var entity = _draftJs.Entity.get(character.entity);\n\t          var previousEntity = _draftJs.Entity.get(previousCharacter.entity);\n\t          // Does the different entity have the same type?\n\t          if (entity.type === previousEntity.type && entity !== previousEntity) {\n\t            // Merge the entities\n\t            _draftJs.Entity.mergeData(previousCharacter.entity, { end: entity.data.end });\n\t            return {\n\t              characterList: characterList.push(_draftJs.CharacterMetadata.applyEntity(character, previousCharacter.entity)),\n\t              text: text + contentBlock.text[index]\n\t            };\n\t          } else if (entity.type === _TranscriptEntities.TRANSCRIPT_SPACE && previousEntity.type === _TranscriptEntities.TRANSCRIPT_SPACE) {\n\t            return {\n\t              characterList: characterList,\n\t              text: text\n\t            };\n\t          }\n\t        }\n\t      } else {\n\t        // Set it to the entity of this character\n\t        return {\n\t          characterList: characterList.set(-1, _draftJs.CharacterMetadata.applyEntity(previousCharacter, character.entity)).push(character),\n\t          text: text + contentBlock.text[index]\n\t        };\n\t      }\n\t    }\n\t    return {\n\t      characterList: characterList.push(character),\n\t      text: text + contentBlock.text[index]\n\t    };\n\t  }, { characterList: new _immutable2.default.List(), text: '' });\n\t};\n\t\n\texports.default = updateBlock;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_14__;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_15__;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ec948f4de5f0f23026bf","import TranscriptEditor from './components/TranscriptEditor';\nimport TranscriptEditorBlock from './components/TranscriptEditorBlock';\nimport TranscriptEditorWord from './components/TranscriptEditorWord';\nimport TranscriptEditorSpace from './components/TranscriptEditorSpace';\nimport TranscriptEntities from './helpers/TranscriptEntities';\nimport convertFromTranscript from './helpers/convertFromTranscript';\nimport convertToTranscript from './helpers/convertToTranscript';\n\nexport default TranscriptEditor;\nexport {\n  TranscriptEditorBlock,\n  TranscriptEditorWord,\n  TranscriptEditorSpace,\n  TranscriptEntities,\n  convertFromTranscript,\n  convertToTranscript,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"draft-js\"\n// module id = 1\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"immutable\"\n// module id = 2\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = 3\n// module chunks = 0","export const TRANSCRIPT_SPACE = 'TRANSCRIPT_SPACE';\nexport const TRANSCRIPT_WORD = 'TRANSCRIPT_WORD';\nexport const TRANSCRIPT_PLACEHOLDER = 'TRANSCRIPT_PLACEHOLDER';\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/TranscriptEntities.js","import React from 'react';\nimport { EditorBlock } from 'draft-js';\n\nconst TranscriptEditorBlock = props => (\n  <div className=\"transcript-editor-block\">\n    <div\n      className=\"transcript-editor-block__speaker\"\n      contentEditable={false}\n      style={{\n        MozUserSelect: 'none',\n        WebkitUserSelect: 'none',\n        msUserSelect: 'none',\n      }}\n    >\n      Speaker {props.block.data.get('speaker')}\n    </div>\n    <div className=\"transcript-editor-block__text\">\n      <EditorBlock {...props} />\n    </div>\n  </div>\n);\n\nTranscriptEditorBlock.propTypes = {\n  block: React.PropTypes.object,\n};\n\nexport default TranscriptEditorBlock;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/TranscriptEditorBlock.js","import React from 'react';\n\nconst TranscriptEditorSpace = ({ offsetKey, children }) => (\n  <span\n    id={`space-${offsetKey}`}\n    className=\"transcript-editor-block__space\"\n  >{ children }</span>\n);\n\nTranscriptEditorSpace.propTypes = {\n  offsetKey: React.PropTypes.string,\n  children: React.PropTypes.array,\n};\n\nexport default TranscriptEditorSpace;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/TranscriptEditorSpace.js","import React from 'react';\nimport { Entity } from 'draft-js';\n\nconst TranscriptEditorWord = ({ entityKey, children }) => {\n  const entity = Entity.get(entityKey);\n  const titleString = `${entity.data.start.toFixed(2)}`\n    + ` - ${entity.data.end.toFixed(2)}`;\n  return (\n    <span\n      title={titleString}\n      id={`word-${entity.data.id}`}\n      data-start={entity.data.start}\n      data-end={entity.data.end}\n      className=\"transcript-editor-block__word\"\n    >{ children }</span>\n  );\n};\n\nTranscriptEditorWord.propTypes = {\n  entityKey: React.PropTypes.string,\n  children: React.PropTypes.array,\n};\n\nexport default TranscriptEditorWord;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/TranscriptEditorWord.js","import { ContentBlock, Entity, CharacterMetadata, ContentState } from 'draft-js';\nimport Immutable from 'immutable';\nimport uuidV4 from 'uuid/v4';\n\nconst convertFromTranscript = (transcript) => {\n  const contentBlocks = transcript.get('segments').map((segment, segmentIndex) =>\n    new ContentBlock({\n      key: segmentIndex.toString(),\n      characterList: segment.get('words').map((word) => {\n        const entity = Entity.create(\n          'TRANSCRIPT_WORD',\n          'MUTABLE',\n          {\n            start: word.get('start'),\n            end: word.get('end'),\n            id: word.get('id') || uuidV4(),\n          }\n        );\n        return new Immutable.List(word.get('text').split('').map(() =>\n          CharacterMetadata.applyEntity(\n            CharacterMetadata.create(),\n            entity\n          )\n        ));\n      }).interpose(\n        new Immutable.List([\n          CharacterMetadata.applyEntity(\n            CharacterMetadata.create(),\n            Entity.create(\n              'TRANSCRIPT_SPACE', 'IMMUTABLE', null\n            )\n          ),\n        ])\n      ).flatten(1),\n      text: segment.get('words').map(w =>\n        w.get('text')\n      ).join(' '),\n      data: new Immutable.Map({ speaker: segment.get('speaker') }),\n    })\n  );\n\n  const contentState = ContentState.createFromBlockArray(contentBlocks);\n\n  const speakers = transcript.get('speakers');\n\n  return { contentState, speakers };\n};\n\nexport default convertFromTranscript;\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/convertFromTranscript.js","import { Entity } from 'draft-js';\nimport Immutable from 'immutable';\n\nimport { Transcript, TranscriptSegment, TranscriptWord } from 'transcript-model';\n\nconst convertToTranscript = (contentState, speakers) => {\n  const segments = contentState.getBlockMap().toArray().map((block) => {\n    const words = [];\n\n    block.findEntityRanges(\n      (character) => {\n        const entityKey = character.getEntity();\n        if (entityKey === null) {\n          return false;\n        }\n        return Entity.get(entityKey).getType() === 'TRANSCRIPT_WORD';\n      },\n      (start, end) => {\n        const entity = Entity.get(block.getEntityAt(start));\n        const text = block.getText().substring(start, end);\n        words.push(new TranscriptWord({\n          start: entity.data.start,\n          end: entity.data.end,\n          id: entity.data.id,\n          text,\n        }));\n      }\n    );\n\n    return new TranscriptSegment({\n      words: new Immutable.List(words),\n      speaker: block.data.get('speaker'),\n    });\n  });\n\n  return new Transcript({\n    segments: new Immutable.List(segments),\n    speakers,\n  });\n};\n\nexport default convertToTranscript;\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/convertToTranscript.js","module.exports = __WEBPACK_EXTERNAL_MODULE_10__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"transcript-model\"\n// module id = 10\n// module chunks = 0","import React, { Component } from 'react';\nimport { Editor, EditorState, Entity, CompositeDecorator, CharacterMetadata, getDefaultKeyBinding } from 'draft-js';\nimport Immutable from 'immutable';\nimport debounce from 'lodash.debounce';\nimport { Transcript } from 'transcript-model';\n\nimport convertFromTranscript from '../helpers/convertFromTranscript';\nimport convertToTranscript from '../helpers/convertToTranscript';\nimport updateBlock from '../helpers/updateBlock';\nimport TranscriptEditorBlock from './TranscriptEditorBlock';\nimport TranscriptEditorWord from './TranscriptEditorWord';\nimport TranscriptEditorSpace from './TranscriptEditorSpace';\nimport { TRANSCRIPT_WORD, TRANSCRIPT_SPACE }\n  from '../helpers/TranscriptEntities';\n\nimport '../css/TranscriptEditor.css';\n\nclass TranscriptEditor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editorState: EditorState.createEmpty(),\n      speakers: [],\n      disabled: props.disabled || false,\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.handleBeforeInput = this.handleBeforeInput.bind(this);\n    this.handleReturn = this.handleReturn.bind(this);\n    this.blockRenderer = this.blockRenderer.bind(this);\n    this.handleKeyboardEvent = this.handleKeyboardEvent.bind(this);\n\n    this.debouncedSendTranscriptUpdate = debounce(this.sendTranscriptUpdate, 500);\n\n    this.decorator = new CompositeDecorator([\n      {\n        strategy: (contentBlock, callback) => {\n          contentBlock.findEntityRanges((character) => {\n            const entityKey = character.getEntity();\n            if (entityKey === null) {\n              return false;\n            }\n            const entityType = Entity.get(entityKey).getType();\n            return entityType === TRANSCRIPT_WORD;\n          }, callback);\n        },\n        component: TranscriptEditorWord,\n      },\n      {\n        strategy: (contentBlock, callback) => {\n          contentBlock.findEntityRanges((character) => {\n            const entityKey = character.getEntity();\n            if (entityKey === null) {\n              return false;\n            }\n            const entityType = Entity.get(entityKey).getType();\n            return entityType === TRANSCRIPT_SPACE;\n          }, callback);\n        },\n        component: TranscriptEditorSpace,\n      },\n    ]);\n  }\n\n  componentWillMount() {\n    if (this.props.transcript) {\n      this.instantiateEditor(this.props.transcript);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      disabled: nextProps.disabled || false,\n    });\n\n    const transcript = nextProps.transcript;\n    if (transcript && this.state.transcript !== transcript) {\n      this.instantiateEditor(transcript);\n    }\n  }\n\n  onChange(editorState) {\n    if (this.state.disabled) {\n      return;\n    }\n\n    const contentState = editorState.getCurrentContent();\n    const previousEditorState = this.state.editorState;\n    const lastChangeType = editorState.getLastChangeType();\n\n    const selectionState = editorState.getSelection();\n    const previousSelectionState = previousEditorState.getSelection();\n\n    if (this.props.onSelectionChange && selectionState !== previousSelectionState) {\n      this.sendSelectionChange(contentState, selectionState);\n    }\n\n    if (lastChangeType !== 'undo' && contentState !== previousEditorState.getCurrentContent()) {\n      this.debouncedSendTranscriptUpdate(contentState, this.state.speakers);\n\n      const startKey = selectionState.getStartKey();\n      const previousStartKey = previousSelectionState.getStartKey();\n\n      const blockMap = contentState.getBlockMap();\n\n      const newBlockMap = blockMap.reduce((_newBlockMap, contentBlock, blockKey) => {\n        let newContentBlock = contentBlock;\n\n        // Is this the block currently being edited?\n        if (blockKey === startKey) {\n          // Has everything been deleted from the block?\n          if (newContentBlock.characterList.isEmpty()) {\n            // Remove it\n            return _newBlockMap;\n          }\n\n          const startOffset = selectionState.getStartOffset();\n          // Have we merged blocks?\n          if (blockMap.size < previousEditorState.getCurrentContent().getBlockMap().size) {\n            // Do we have two adjacent words?\n            if (Entity.get(newContentBlock.characterList.get(startOffset).entity).type\n                  === TRANSCRIPT_WORD\n             && Entity.get(newContentBlock.characterList.get(startOffset - 1).entity).type\n                   === TRANSCRIPT_WORD) {\n              // Add a space\n              newContentBlock = newContentBlock\n                .set('characterList', newContentBlock.characterList.insert(startOffset,\n                  CharacterMetadata.applyEntity(\n                    CharacterMetadata.create(),\n                    Entity.create(\n                      TRANSCRIPT_SPACE, 'IMMUTABLE', null\n                    )\n                  )\n                ))\n                .set('text', `${newContentBlock.text.slice(0, startOffset)}`\n                           + ` ${newContentBlock.text.slice(startOffset)}`\n                );\n            }\n          }\n\n          // Update the entities\n          newContentBlock = newContentBlock.merge(\n            updateBlock(\n              newContentBlock,\n              previousEditorState.getCurrentContent().getBlockForKey(blockKey)\n            )\n          );\n\n          // Have we created a leading space? (e.g. when splitting a block)\n          if (Entity.get(\n              newContentBlock.characterList.first().entity\n            ).type === TRANSCRIPT_SPACE) {\n            // Remove the leading space\n            newContentBlock = newContentBlock\n              .set('characterList', newContentBlock.characterList.shift())\n              .set('text', newContentBlock.text.substring(1));\n          }\n\n          // Is this block missing data? (e.g. it's been split)\n          if (newContentBlock.data.isEmpty()) {\n            // Copy the previous block's data\n            newContentBlock = newContentBlock.set(\n              'data', _newBlockMap.last().data\n            );\n          }\n        // Otherwise is this the block previously being edited? (e.g. that was split)\n        } else if (blockKey === previousStartKey) {\n          // Have we created a trailing space?\n          if (Entity.get(\n              newContentBlock.characterList.last().entity\n            ).type === TRANSCRIPT_SPACE) {\n            // Remove the trailing space\n            newContentBlock = newContentBlock\n              .set('characterList', newContentBlock.characterList.pop())\n              .set('text', newContentBlock.text.substring(0, newContentBlock.text.length - 1));\n          }\n        }\n\n        return _newBlockMap.set(blockKey, newContentBlock);\n      }, new Immutable.OrderedMap());\n\n      const newContentState = contentState.set('blockMap', newBlockMap);\n      this.setState({\n        editorState: EditorState.push(\n          previousEditorState, newContentState, lastChangeType\n        ),\n      });\n      return;\n    }\n    this.setState({\n      editorState,\n    });\n  }\n\n  instantiateEditor(transcript) {\n    const { contentState, speakers } = convertFromTranscript(transcript);\n\n    this.setState({\n      editorState: EditorState.createWithContent(\n        contentState,\n        this.decorator\n      ),\n      speakers,\n      transcript,\n    });\n\n    this.sendTranscriptUpdate(contentState, speakers);\n  }\n\n  handleBeforeInput(chars) {\n    // Don't allow inserting additional spaces between words\n    if (chars === ' ') {\n      const editorState = this.state.editorState;\n      const selectionState = editorState.getSelection();\n      const startKey = selectionState.getStartKey();\n      const startOffset = selectionState.getStartOffset();\n      const selectedBlock = editorState.getCurrentContent().getBlockForKey(startKey);\n      const entityKeyBefore = selectedBlock.getEntityAt(startOffset - 1);\n      if (entityKeyBefore && Entity.get(entityKeyBefore).type === TRANSCRIPT_SPACE) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  handleKeyboardEvent(e) {\n    if (getDefaultKeyBinding(e)) {\n      return getDefaultKeyBinding(e);\n    }\n    if (this.props.onKeyboardEvent) {\n      this.props.onKeyboardEvent(e);\n    }\n    return null;\n  }\n\n  blockRenderer() {\n    return {\n      component: TranscriptEditorBlock,\n      props: {\n        speakers: this.state.speakers,\n      },\n    };\n  }\n\n  focus() {\n    this.editor.focus();\n  }\n\n  sendTranscriptUpdate(contentState, speakers) {\n    this.props.onTranscriptUpdate(convertToTranscript(contentState, speakers));\n  }\n\n  sendSelectionChange(contentState, selectionState) {\n    const startKey = selectionState.isBackward\n      ? selectionState.focusKey : selectionState.anchorKey;\n    const startOffset = selectionState.isBackward\n      ? selectionState.focusOffset : selectionState.anchorOffset;\n    const endKey = selectionState.isBackward\n      ? selectionState.anchorKey : selectionState.focusKey;\n    const endOffset = selectionState.isBackward\n      ? selectionState.anchorOffset : selectionState.focusOffset;\n\n    const startEntityKey = contentState\n      .getBlockForKey(startKey)\n      .getEntityAt(startOffset);\n    const endEntityKey = contentState\n      .getBlockForKey(endKey)\n      .getEntityAt(endOffset);\n\n    const startEntity = startEntityKey && Entity.get(startEntityKey);\n    const endEntity = endEntityKey && Entity.get(endEntityKey);\n\n    this.props.onSelectionChange({\n      startTime: startEntity && startEntity.data.start,\n      startWordID: startEntity && startEntity.data.id,\n      startBlockKey: startKey,\n      startCharacterOffset: startOffset,\n      endTime: endEntity && endEntity.data.end,\n      endID: endEntity && endEntity.data.id,\n      endBlockKey: endKey,\n      endCharacterOffset: endOffset,\n    });\n  }\n\n  handleReturn() {\n    const editorState = this.state.editorState;\n    const selectionState = editorState.getSelection();\n    const startKey = selectionState.getStartKey();\n    const startOffset = selectionState.getStartOffset();\n    const selectedBlock = editorState.getCurrentContent().getBlockForKey(startKey);\n    const entityKeyBefore = selectedBlock.getEntityAt(startOffset - 1);\n    const entityKeyAfter = selectedBlock.getEntityAt(startOffset);\n    if ((entityKeyBefore && Entity.get(entityKeyBefore).type === TRANSCRIPT_SPACE)\n      || (entityKeyAfter && Entity.get(entityKeyAfter).type === TRANSCRIPT_SPACE)) {\n      return false;\n    }\n    return true;\n  }\n\n  // eslint-disable-next-line\n  handlePastedText() {\n    return true;\n  }\n\n  render() {\n    const { editorState } = this.state;\n    return (\n      <div className=\"transcript-editor\">\n        <Editor\n          ref={(editor) => { this.editor = editor; }}\n          editorState={editorState}\n          onChange={this.onChange}\n          handleReturn={this.handleReturn}\n          handleBeforeInput={this.handleBeforeInput}\n          keyBindingFn={this.handleKeyboardEvent}\n          handlePastedText={this.handlePastedText}\n          blockRendererFn={this.blockRenderer}\n        />\n      </div>\n    );\n  }\n}\n\nTranscriptEditor.propTypes = {\n  transcript: React.PropTypes.instanceOf(Transcript),\n  onTranscriptUpdate: React.PropTypes.func,\n  onSelectionChange: React.PropTypes.func,\n  disabled: React.PropTypes.bool,\n  onKeyboardEvent: React.PropTypes.func,\n};\n\nexport default TranscriptEditor;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/TranscriptEditor.js","import Immutable from 'immutable';\nimport { Entity, CharacterMetadata } from 'draft-js';\n\nimport { TRANSCRIPT_SPACE }\n  from './TranscriptEntities';\n\nconst updateBlock = contentBlock => (\n  contentBlock.characterList.reduce(({ characterList, text }, character, index) => {\n    // Is this the first character?\n    if (!characterList.isEmpty()) {\n      const previousCharacter = characterList.last();\n      // Does the previous character have an entity?\n      if (previousCharacter.entity) {\n        // Does the previous character have a different entity?\n        if (character.entity) {\n          const entity = Entity.get(character.entity);\n          const previousEntity = Entity.get(previousCharacter.entity);\n          // Does the different entity have the same type?\n          if (entity.type === previousEntity.type && entity !== previousEntity) {\n            // Merge the entities\n            Entity.mergeData(previousCharacter.entity, { end: entity.data.end });\n            return {\n              characterList: characterList.push(\n                CharacterMetadata.applyEntity(character, previousCharacter.entity)\n              ),\n              text: text + contentBlock.text[index],\n            };\n          } else if (entity.type === TRANSCRIPT_SPACE && previousEntity.type === TRANSCRIPT_SPACE) {\n            return {\n              characterList,\n              text,\n            };\n          }\n        }\n      } else {\n        // Set it to the entity of this character\n        return {\n          characterList: characterList\n            .set(-1, CharacterMetadata.applyEntity(previousCharacter, character.entity))\n            .push(character),\n          text: text + contentBlock.text[index],\n        };\n      }\n    }\n    return {\n      characterList: characterList.push(character),\n      text: text + contentBlock.text[index],\n    };\n  }, { characterList: new Immutable.List(), text: '' })\n);\n\nexport default updateBlock;\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/updateBlock.js","module.exports = __WEBPACK_EXTERNAL_MODULE_14__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"lodash.debounce\"\n// module id = 14\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_15__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"uuid/v4\"\n// module id = 15\n// module chunks = 0"],"sourceRoot":""}